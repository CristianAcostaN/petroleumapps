/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formulas;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author EQUIPO
 */
public class Capillary extends javax.swing.JDialog {

    /**
     * Creates new form Capillary
     */
    public Capillary(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        
        buttonGroupFluidIteration.add(RBCapillaryPressure);
        buttonGroupFluidIteration.add(RBCapillaryPressureCorrection);
        buttonGroupFluidIteration.add(RBCapillaryPressureTheory);
        buttonGroupFluidIteration.add(RBCapillaryPressureandPoreRadius);
        buttonGroupFluidIteration.add(RBEquivalentHeight);
        buttonGroupFluidIteration.add(RBGasOilCapillaryPressure);
        buttonGroupFluidIteration.add(RBLeverettsJFunction);
        buttonGroupFluidIteration.add(RBOilWaterCapillaryPressure);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupFluidIteration = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        RBCapillaryPressure = new javax.swing.JRadioButton();
        RBCapillaryPressureTheory = new javax.swing.JRadioButton();
        RBCapillaryPressureandPoreRadius = new javax.swing.JRadioButton();
        RBEquivalentHeight = new javax.swing.JRadioButton();
        RBOilWaterCapillaryPressure = new javax.swing.JRadioButton();
        RBGasOilCapillaryPressure = new javax.swing.JRadioButton();
        RBCapillaryPressureCorrection = new javax.swing.JRadioButton();
        RBLeverettsJFunction = new javax.swing.JRadioButton();
        CapillaryFluidIterationButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textarea1 = new javax.swing.JTextArea();
        imagen1 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea2 = new javax.swing.JTextArea();
        imagen2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Capillary Pressure");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Rock–Fluid Interaction"));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        RBCapillaryPressure.setBackground(new java.awt.Color(255, 255, 255));
        RBCapillaryPressure.setText("Capillary Pressure");

        RBCapillaryPressureTheory.setBackground(new java.awt.Color(255, 255, 255));
        RBCapillaryPressureTheory.setText("Capillary Pressure Theory");

        RBCapillaryPressureandPoreRadius.setBackground(new java.awt.Color(255, 255, 255));
        RBCapillaryPressureandPoreRadius.setText("Capillary Pressure and Pore Radius");

        RBEquivalentHeight.setBackground(new java.awt.Color(255, 255, 255));
        RBEquivalentHeight.setText("Equivalent Height");

        RBOilWaterCapillaryPressure.setBackground(new java.awt.Color(255, 255, 255));
        RBOilWaterCapillaryPressure.setText("Oil–Water Capillary Pressure");

        RBGasOilCapillaryPressure.setBackground(new java.awt.Color(255, 255, 255));
        RBGasOilCapillaryPressure.setText("Gas–Oil Capillary Pressure");

        RBCapillaryPressureCorrection.setBackground(new java.awt.Color(255, 255, 255));
        RBCapillaryPressureCorrection.setText("Capillary Pressure Correction");

        RBLeverettsJFunction.setBackground(new java.awt.Color(255, 255, 255));
        RBLeverettsJFunction.setText("Leverett’s J-Function");

        CapillaryFluidIterationButton.setBackground(new java.awt.Color(255, 255, 255));
        CapillaryFluidIterationButton.setText("Show");
        CapillaryFluidIterationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CapillaryFluidIterationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RBCapillaryPressure)
                    .addComponent(RBCapillaryPressureTheory)
                    .addComponent(RBCapillaryPressureandPoreRadius)
                    .addComponent(RBEquivalentHeight))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(RBLeverettsJFunction)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(CapillaryFluidIterationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RBGasOilCapillaryPressure)
                            .addComponent(RBOilWaterCapillaryPressure)
                            .addComponent(RBCapillaryPressureCorrection))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RBCapillaryPressure)
                    .addComponent(RBOilWaterCapillaryPressure))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RBCapillaryPressureTheory)
                    .addComponent(RBGasOilCapillaryPressure))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RBCapillaryPressureCorrection)
                    .addComponent(RBCapillaryPressureandPoreRadius))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RBEquivalentHeight)
                    .addComponent(RBLeverettsJFunction)
                    .addComponent(CapillaryFluidIterationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        textarea1.setEditable(false);
        textarea1.setColumns(20);
        textarea1.setLineWrap(true);
        textarea1.setRows(5);
        textarea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(textarea1);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        imagen1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(imagen1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imagen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        textarea2.setEditable(false);
        textarea2.setColumns(20);
        textarea2.setLineWrap(true);
        textarea2.setRows(5);
        textarea2.setWrapStyleWord(true);
        jScrollPane2.setViewportView(textarea2);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addContainerGap())
        );

        imagen2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(imagen2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imagen2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CapillaryFluidIterationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CapillaryFluidIterationButtonActionPerformed
        if (RBCapillaryPressure.isSelected()) {
            this.imagen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryPressure1.jpg")));
            this.imagen2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryPressure2.jpg")));
            InputStream is = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/Capillary2.txt");
            textoCapillary1(is);
            InputStream is2 = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/Capillary3.txt");
            textoCapillary2(is2);

        } else if (RBCapillaryPressureCorrection.isSelected()) {
            this.imagen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryPressureCorrection.jpg")));
            this.imagen2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/empty.jpg")));
            InputStream is = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryPressureCorrection1.txt");
            textoCapillary1(is);
            InputStream is2 = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryPressureCorrection2.txt");
            textoCapillary2(is2);

        } else if (RBCapillaryPressureTheory.isSelected()) {
            this.imagen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryPressureTheory1.jpg")));
            this.imagen2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryPressureTheory2.jpg")));
            InputStream is = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryEquivalentHeight1.txt");
            textoCapillary1(is);
            InputStream is2 = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryEquivalentHeight2.txt");
            textoCapillary2(is2);
            
        } else if (RBCapillaryPressureandPoreRadius.isSelected()) {
            this.imagen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryPressurePoreRadius1.jpg")));
            this.imagen2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/empty.jpg")));
            InputStream is = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryPressurePoreRadius1.txt");
            textoCapillary1(is);
            InputStream is2 = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryPressurePoreRadius2.txt");
            textoCapillary2(is2);

        } else if (RBEquivalentHeight.isSelected()) {
            this.imagen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryEquivalentHeight1.jpg")));
            this.imagen2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryEquivalentHeight3.jpg")));
            InputStream is = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryEquivalentHeight1.txt");
            textoCapillary1(is);
            InputStream is2 = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryEquivalentHeight2.txt");
            textoCapillary2(is2);
            
        } else if (RBGasOilCapillaryPressure.isSelected()) {
            this.imagen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryGasOilCapillaryPressure.jpg")));
            this.imagen2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/empty.jpg")));
            InputStream is = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryGasOilCapillaryPressure1.txt");
            textoCapillary1(is);
            InputStream is2 = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryGasOilCapillaryPressure2.txt");
            textoCapillary2(is2);

        } else if (RBLeverettsJFunction.isSelected()) {
            this.imagen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryLeverettJFuntion1.jpg")));
            this.imagen2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryLeverettJFuntion3.jpg")));
            InputStream is = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryLeverettsJFuntion1.txt");
            textoCapillary1(is);
            InputStream is2 = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryLeverettsJFuntion2.txt");
            textoCapillary2(is2);
            
        } else if (RBOilWaterCapillaryPressure.isSelected()) {
            this.imagen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/CapillaryOilWaterCapillaryPressure.jpg")));
            this.imagen2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/formulas/Capillarity/empty.jpg")));
            InputStream is = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryOilWaterCapilleryPressure1.txt");
            textoCapillary1(is);
            InputStream is2 = getClass().getResourceAsStream("/Textos/PorVisCapiGOR/Capillary/CapillaryOilWaterCapilleryPressure2.txt");
            textoCapillary2(is2);
            
        }else {
            JOptionPane.showMessageDialog(this, "You must check at least one option.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CapillaryFluidIterationButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Capillary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Capillary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Capillary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Capillary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Capillary dialog = new Capillary(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public void textoCapillary1(InputStream is) {
        textarea1.setText("");
        try {
            BufferedReader read = new BufferedReader(new InputStreamReader(is));
            String linea = read.readLine();
            while (linea != null) {
                textarea1.append(linea + "\n");
                linea = read.readLine();
            }
        } catch (Exception ex) {
            Logger.getLogger(Porosity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void textoCapillary2(InputStream is) {
        textarea2.setText("");
        try {
            BufferedReader read = new BufferedReader(new InputStreamReader(is));
            String linea = read.readLine();
            while (linea != null) {
                textarea2.append(linea + "\n");
                linea = read.readLine();
            }
        } catch (Exception ex) {
            Logger.getLogger(Porosity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CapillaryFluidIterationButton;
    private javax.swing.JRadioButton RBCapillaryPressure;
    private javax.swing.JRadioButton RBCapillaryPressureCorrection;
    private javax.swing.JRadioButton RBCapillaryPressureTheory;
    private javax.swing.JRadioButton RBCapillaryPressureandPoreRadius;
    private javax.swing.JRadioButton RBEquivalentHeight;
    private javax.swing.JRadioButton RBGasOilCapillaryPressure;
    private javax.swing.JRadioButton RBLeverettsJFunction;
    private javax.swing.JRadioButton RBOilWaterCapillaryPressure;
    private javax.swing.ButtonGroup buttonGroupFluidIteration;
    private javax.swing.JLabel imagen1;
    private javax.swing.JLabel imagen2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea textarea1;
    private javax.swing.JTextArea textarea2;
    // End of variables declaration//GEN-END:variables
}
